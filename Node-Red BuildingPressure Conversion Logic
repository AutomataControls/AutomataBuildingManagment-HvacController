// Initialize context variables if they don't exist
var lastValidVoltage = context.get('lastValidVoltage');

// Check if lastValidVoltage has never been set, initialize it with a reasonable starting value
if (lastValidVoltage === undefined) {
    lastValidVoltage = 0.060;
    context.set('lastValidVoltage', lastValidVoltage); // Save the initial value in the context
    node.warn("Initializing lastValidVoltage to: " + lastValidVoltage);
}

// Get the incoming voltage
var currentVoltage = msg.payload;

// Define the maximum allowable voltage change to detect erratic readings
var maxVoltageChange = 1.5; // Adjust this value based on your expected voltage fluctuations

// Check for erratic voltage readings (if the voltage jump is too large, ignore the reading)
if (Math.abs(currentVoltage - lastValidVoltage) > maxVoltageChange) {
    node.warn("Erratic voltage detected. Ignoring value: " + currentVoltage + ", using last valid voltage: " + lastValidVoltage);
    currentVoltage = lastValidVoltage; // Use the last valid voltage
} else {
    // Update the last valid voltage if the reading is not erratic
    lastValidVoltage = currentVoltage;
    context.set('lastValidVoltage', lastValidVoltage);
    node.warn("Voltage updated to: " + lastValidVoltage);
}

// Convert the valid voltage to pressure
msg.payload = voltageToPressureInWC(currentVoltage);

function voltageToPressureInWC(voltage) {
    var maxVoltage = 10.0;  // Maximum output voltage of the sensor
    var zeroOffset = 0.1346;  // Corrected zero offset voltage
    var maxPressurePa = 2500;  // Maximum pressure range of the sensor in Pascals
    var minPressurePa = 0;  // Minimum pressure range of the sensor in Pascals
    var paToInWC = 0.00401865;  // Conversion factor from Pascals to inches of water column

    // Calculate pressure in Pascals from voltage with offset adjustment
    var pressurePa = ((voltage - zeroOffset) / (maxVoltage - zeroOffset)) * (maxPressurePa - minPressurePa) + minPressurePa;

    // Ensure the pressure remains positive by flipping the sign if necessary
    if (pressurePa < 0) {
        pressurePa = Math.abs(pressurePa);
    }

    // Convert pressure from Pascals to inches of water column
    var pressureInWC = pressurePa * paToInWC;

    // Return value rounded to 3 decimal places
    return parseFloat(pressureInWC.toFixed(3));
}

return msg;
